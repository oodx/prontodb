ProntoDB Project Vision & MVP Scope Summary
===========================================
Date: 2025-09-08
Target: PRD.md, ROADMAP.md analysis
Created by: China the Summary Chicken üêî

PROJECT VISION
--------------
ProntoDB is a single-binary CLI key-value store built on SQLite, designed as a pragmatic, deterministic tool for namespaced data storage with TTL support.

CORE CONCEPT
- Addressing Pattern: `project.namespace.key__context` 
- Custom delimiter support (default: `.`)
- Single-table storage approach (kv table) for MVP
- XDG-compliant file paths
- WAL mode enabled SQLite backend
- No daemon/server - one-shot command execution

MVP SCOPE BOUNDARIES
--------------------
INCLUDED in MVP:
‚úì Core CRUD operations (set/get/del/keys/scan)
‚úì Discovery commands (projects/namespaces)
‚úì TTL namespace creation (admin create-cache)
‚úì Basic TTL enforcement rules
‚úì XDG path compliance
‚úì Proper exit codes (0=success, 2=miss/expired)
‚úì Key validation (delimiter restrictions)

EXPLICITLY EXCLUDED from MVP:
‚úó Streams/auth preamble
‚úó Lifecycle management (install/uninstall/backup)
‚úó Import/export TSV
‚úó JSON canonicalization
‚úó Base64 encoding (--b64)
‚úó Per-namespace physical tables (deferred to post-MVP)
‚úó Filesystem mirror
‚úó Eviction policies
‚úó Sessions/API keys

CLI SURFACE DESIGN
------------------
Global flags: [-p PROJECT] [-n NAMESPACE] [-d DB] [--ns-delim C]

Core Commands:
- set <key> <value> [--ttl SECONDS]
- get <key> 
- del <key>
- keys [prefix]
- scan [prefix]
- projects
- namespaces -p <PROJECT>
- admin create-cache <project.namespace> timeout=SECONDS

DESIGN TENETS
-------------
1. stdout = data, stderr = status
2. Simple flags, no clap dependency
3. Deterministic, small surface area
4. One-shot commands (no daemon)
5. Defer complex features until core CRUD is stable

ADDRESSING & VALIDATION
-----------------------
- Full addressing: project.namespace.key__context
- Context suffix (__context) is optional but stored separately
- Active delimiter cannot appear in key names (validation required)
- TTL namespace rules:
  * TTL namespaces: apply default TTL when --ttl omitted
  * Non-TTL namespaces: reject --ttl flag with error

STORAGE MODEL (MVP)
-------------------
Single `kv` table schema:
- Keyed by: project/namespace/key/context
- TTL support via expires_at column
- Namespace metadata in sys_namespaces table
- WAL mode + busy_timeout enabled

SUCCESS CRITERIA
----------------
Core CRUD + discovery + TTL-create operations must:
- Pass integration tests in isolated environment  
- Demonstrate correct exit codes
- Provide clear error messages
- Maintain deterministic behavior

This MVP-first approach prioritizes shipping a working, testable foundation before adding advanced features.