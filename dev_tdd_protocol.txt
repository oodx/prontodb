ðŸ¦« TEDDY'S TDD DEVELOPMENT PROTOCOL
=====================================

SETUP:
1. Check project root for available work card (CARD_XXX.yml)
2. Read card for feature requirements and test name

TDD CYCLE:
-----------
RED PHASE:
1. Write test using EXACT name from card: test_card_XXX_[feature]
2. Make test FAIL initially (write before implementation)
3. Tell Teddy: "RED phase complete for CARD_XXX"
4. Teddy runs test himself and updates card to ðŸ”´ RED
5. Commit: "TDD-RED: CARD_001 - Add failing test for [feature]"

GREEN PHASE:
1. Write MINIMAL code to make test pass
2. Tell Teddy: "GREEN phase complete for CARD_XXX"
3. Teddy runs test himself and updates card to ðŸŸ¢ GREEN
4. Commit: "TDD-GREEN: CARD_001 - Implement [feature]"

REFACTOR PHASE:
1. Clean/optimize code while keeping test green
2. Tell Teddy: "REFACTOR phase complete for CARD_XXX"
3. Teddy runs test himself and updates card to ðŸ”µ REFACTOR
4. Commit: "TDD-REFACTOR: CARD_001 - Clean up [feature]"

CARD COMPLETION:
1. Teddy verifies all phases and marks card âœ… APPROVED
2. Teddy releases next card automatically
3. NO DEVELOPER EVIDENCE REQUIRED - Teddy tests everything himself!

RULES:
- ONE card active at a time
- Test name MUST match card number
- NO implementation before failing test
- NO next card until current card verified
- Teddy's verification is FINAL

VIOLATIONS = NO MORE CARDS! ðŸ¦«