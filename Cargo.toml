[package]
name = "prontodb"
version = "0.7.0"
edition = "2021"
description = "ProntoDB — namespaced, file-based KV on SQLite with RSB-style CLI"
repository = "https://github.com/oodx/prontodb"
license = "AGPL-3.0"
publish = false

[dependencies]
# GitHub-first hub integration (following updated HOWTO_HUB.md)
# Testing latest hub with data-ext and error-ext features
hub = { git = "https://github.com/oodx/hub.git", features = ["data-ext", "error-ext"] }
atty = "0.2"                                       # TTY detection for pipe input
directories = "6"
md5 = "0.8"                                        # Content hashing for cache keys
rusqlite = { version = "0.37" }                    # default: link to system SQLite

# Hub now manages: serde, serde_json, base64 via "data-ext" + anyhow, thiserror via "error-ext"


rsb = { git = "https://github.com/oodx/rsb.git", features = ["visuals", "stdopts"] } # GitHub primary method
#rsb = { path = "../rsb", features = ["visuals", "stdopts"] } # Emergency-only local path
xstream = { path = "../xstream", optional = true } # XStream integration



# Optional value-layer features
zstd = { version = "0.13", optional = true }       # compression-zstd
aes-gcm = { version = "0.10", features = ["aes"], optional = true }  # encryption
pbkdf2 = { version = "0.12", optional = true }
sha2 = { version = "0.10", optional = true }


[dev-dependencies]
assert_cmd = "2.0"
predicates = "3.0"
tempfile = "3.0"


[features]
default = ["json", "thiserror", "sqlite-bundled"] # Include bundled SQLite for easy builds
json = ["hub/serde", "hub/serde_json"]             # Use hub's serde ecosystem
serde = ["hub/serde"]                            # Make serde available for derive macros
thiserror = ["hub/thiserror"]                    # Make thiserror available for derive macros
streaming = ["dep:xstream"]                        # XStream integration for advanced streaming
pipe-cache = []                                    # Revolutionary pipe cache with zero data loss
stdopts = []                                       # Standard options mapping (-d → opt_debug, etc.)

# Use system SQLite by default. If you want portability, build with:
#   cargo build --features sqlite-bundled
sqlite-bundled = ["rusqlite/bundled"]

compression-zstd = ["dep:zstd"]
encryption-aes   = ["dep:aes-gcm", "dep:pbkdf2", "dep:sha2" ] #rand provided by rsb::dep::rand
